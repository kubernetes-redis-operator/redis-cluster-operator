name: Operator Tests

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types:
      - created

jobs:

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.21

      - name: Download mods
        run: go mod download

      - name: Test
        run: make test

      - name: Install goveralls
        run: go install github.com/mattn/goveralls@latest
        
      - name: Send coverage
        working-directory: .
        env:
          COVERALLS_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
        run: goveralls -coverprofile=covprofile -service=github  

  build:
    needs:
      - test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        if: ${{ github.event_name == 'release' }}
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            docker.io/containersol/redis-cluster-operator
          tags: |
            latest
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name == 'release' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=docker.io/kubernetes-redis-operator/redis-cluster-operator:latest
          cache-to: type=inline

  release:
    if: ${{ github.event_name == 'release' }}
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Get Version
        id: getVersion
        run: |
          VERSION=$(echo ${GITHUB_REF#refs/*/} | tr -d v)
          echo ::set-output name=version::${VERSION}

      - name: Generate Bundle
        run: |
          pushd config/default
          kustomize edit set image docker.io/containersol/redis-cluster-operator:${{ steps.getVersion.outputs.version }}
          kustomize edit set image containersol/redis-cluster-operator:${{ steps.getVersion.outputs.version }}
          popd
          kustomize build config/default/ > bundle.yml

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: bundle.yml
